import { useEffect, useRef } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import { useAuth } from "@/contexts/AuthContext";
import {
  checkProfileRedirect,
  isOnModeration,
  validateBloggerInfo,
} from "@/utils/profile-navigation";
import { AUTH_PAGES } from "@/config/routes";

// –°—Ç—Ä–∞–Ω–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –Ω–∞–ª–∏—á–∏—è –±–ª–æ–≥–µ—Ä–∞ —Å username
const BLOGGER_REQUIRED_PAGES = ['/profile', '/profile/edit'];

interface ProfileCheckerProps {
  children: React.ReactNode;
}

export const ProfileChecker = ({ children }: ProfileCheckerProps) => {
  const { user, loading, bloggerInfo, bloggerInfoLoading } = useAuth();
  const navigate = useNavigate();
  const location = useLocation();
  const hasCheckedRef = useRef(false);

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    hasCheckedRef.current = false;
  }, [user?.id]);

  useEffect(() => {
    const performProfileCheck = async () => {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ auth —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
      if (AUTH_PAGES.some((page) => location.pathname === page)) {
        if (import.meta.env.DEV) {
          console.log('üîÑ ProfileChecker: Skipping check on auth page:', location.pathname);
        }
        return;
      }

      // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
      if (!user) {
        if (import.meta.env.DEV) {
          console.log('üîÑ ProfileChecker: No user, skipping check');
        }
        return;
      }

      // –í–ê–ñ–ù–û: –ñ–¥–µ–º –ø–æ–∫–∞ –∑–∞–≥—Ä—É–∑—è—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
      if (loading || bloggerInfoLoading) {
        if (import.meta.env.DEV) {
          console.log('üîÑ ProfileChecker: Still loading, skipping check');
        }
        return; // –ù–ï –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
      }

      // –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º bloggerInfo —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –Ω–∞–ª–∏—á–∏—è –±–ª–æ–≥–µ—Ä–∞
      const isBloggerPage = BLOGGER_REQUIRED_PAGES.some(page => location.pathname.startsWith(page));
      
      if (isBloggerPage) {
        // –î–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü –±–ª–æ–≥–µ—Ä–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –±–ª–æ–≥–µ—Ä–∞
        // –ù–ï –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–¥–µ—Å—å - —ç—Ç–æ –¥–µ–ª–∞–µ—Ç SessionContext
        
        // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤—Å–µ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã - –∂–¥–µ–º
        if (!bloggerInfo) {
          if (import.meta.env.DEV) {
            console.log('üîÑ ProfileChecker: Blogger page - waiting for blogger info...');
          }
          return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ username —É –±–ª–æ–≥–µ—Ä–∞
        if (!bloggerInfo.username) {
          if (import.meta.env.DEV) {
            console.log('üîÑ ProfileChecker: Blogger has no username, redirecting to setup');
          }
          navigate('/profile-setup');
          hasCheckedRef.current = true;
          return;
        }
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å username - –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ
        if (import.meta.env.DEV) {
          console.log('‚úÖ ProfileChecker: Blogger has username, access granted');
        }
      } else {
        // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü (–≥–ª–∞–≤–Ω–∞—è, –ø—É–±–ª–∏—á–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã) bloggerInfo –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
        if (import.meta.env.DEV) {
          console.log('üîÑ ProfileChecker: Non-blogger page, blogger info not required');
        }
      }

      // –ï—Å–ª–∏ —É–∂–µ –ø—Ä–æ–≤–µ—Ä—è–ª–∏ - –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ
      if (hasCheckedRef.current) {
        if (import.meta.env.DEV) {
          console.log('üîÑ ProfileChecker: Already checked, skipping');
        }
        return;
      }

      if (import.meta.env.DEV) {
        console.log('üîÑ ProfileChecker: Performing profile check...');
      }
      
      // –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –≤—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç
        const redirectPath = checkProfileRedirect(
          location.pathname,
          user,
          loading,
          bloggerInfo,
          bloggerInfoLoading,
        );

        if (redirectPath) {
          if (import.meta.env.DEV) {
            console.log('üîÑ ProfileChecker: Redirecting to:', redirectPath);
          }
          navigate(redirectPath);
          hasCheckedRef.current = true;
          return;
        }

        // –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ
        if (import.meta.env.DEV) {
          console.log('üîÑ ProfileChecker: Profile check completed successfully');
        }
        hasCheckedRef.current = true;
      } catch (error) {
        if (import.meta.env.DEV) {
          console.error('üîÑ ProfileChecker: Error during profile check:', error);
        }
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Ç–æ–∂–µ –ø–æ–º–µ—á–∞–µ–º —á—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–¥–µ–ª–∞–ª–∏
        hasCheckedRef.current = true;
      }
    };

    performProfileCheck();
  }, [
    user,
    loading,
    bloggerInfoLoading,
    bloggerInfo,
    navigate,
    location.pathname,
  ]);

  return <>{children}</>;
};
