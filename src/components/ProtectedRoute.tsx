import { useEffect } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import { useAuth } from "@/contexts/AuthContext";
import { useAdminAuth } from "@/contexts/AdminAuthContext";

interface ProtectedRouteProps {
  children: React.ReactNode;
}

export const ProtectedRoute = ({ children }: ProtectedRouteProps) => {
  const { user, loading } = useAuth();
  const { adminInfo, loading: adminLoading } = useAdminAuth();
  const navigate = useNavigate();
  const location = useLocation();

  // –í—ã—á–∏—Å–ª—è–µ–º –æ–¥–∏–Ω —Ä–∞–∑
  const isAdminRoute = location.pathname.startsWith("/admin");
  const isAdminAuthPage =
    location.pathname === "/admin/login" || location.pathname === "/admin/2fa";

  useEffect(() => {
    if (import.meta.env.DEV) {
      console.log('üõ°Ô∏è ProtectedRoute Debug:', {
        pathname: location.pathname,
        isAdminRoute,
        isAdminAuthPage,
        user: user ? 'present' : 'missing',
        loading,
        adminInfo: adminInfo ? 'present' : 'missing',
        adminLoading
      });
    }

    if (isAdminRoute) {
      // –î–ª—è –∞–¥–º–∏–Ω–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º AdminAuthContext
      if (!adminLoading && !adminInfo && !isAdminAuthPage) {
        if (import.meta.env.DEV) {
          console.log('üõ°Ô∏è ProtectedRoute: Redirecting to admin login');
        }
        navigate("/admin/login");
      }
      return;
    }

    // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É Supabase
    // –£–ü–†–û–©–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞–ª–∏—á–∏–µ Supabase –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (!loading && !user) {
      if (import.meta.env.DEV) {
        console.log('üõ°Ô∏è ProtectedRoute: Redirecting to login - no user');
      }
      navigate("/login");
    }
  }, [
    user,
    loading,
    adminInfo,
    adminLoading,
    navigate,
    location,
    isAdminRoute,
    isAdminAuthPage,
  ]);

  if (isAdminRoute) {
    // –î–ª—è –∞–¥–º–∏–Ω–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º AdminAuthContext
    if (isAdminAuthPage) {
      // –°—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞ –∏ 2FA –∞–¥–º–∏–Ω–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ–º
      return <>{children}</>;
    }

    // –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∞–¥–º–∏–Ω–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    if (adminLoading) {
      return null; // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä - AuthRedirectHandler –ø–æ–∫–∞–∂–µ—Ç –µ–≥–æ
    }

    if (!adminInfo) {
      return null;
    }
  } else {
    // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Supabase
    if (loading) {
      return null; // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä - AuthRedirectHandler –ø–æ–∫–∞–∂–µ—Ç –µ–≥–æ
    }

    if (!user) {
      return null;
    }
  }

  return <>{children}</>;
};
