/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –º–∞–ø–ø–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø—Ä–æ—Ñ–∏–ª—è –≤ –ø–æ–ª—è BloggerContext
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –ø–æ–ª–µ–π
 */

import type { EditData } from '@/types/profile';
import type { ClientBloggerInfo } from '@/api/types';

/**
 * –ú–∞–ø–ø–∏–Ω–≥ –ø–æ–ª–µ–π EditData –≤ –ø–æ–ª—è ClientBloggerInfo
 */
export interface ProfileUpdateMapping {
  // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  full_name?: string;
  description?: string;
  gender?: string;
  legal_form?: string;
  contact_url?: string;
  
  // –°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
  verification_status?: 'NEW' | 'APPROVED' | 'REJECTED' | 'MODERATION';
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
  [key: string]: any;
}

/**
 * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è EditData –≤ –ø–æ–ª—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è BloggerContext
 * @param changes - –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * @returns –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏ –¥–ª—è —Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
export function mapProfileChangesToBloggerFields(
  changes: Partial<EditData>
): Partial<ClientBloggerInfo> {
  const mappedFields: Partial<ClientBloggerInfo> = {};

  // –ú–∞–ø–ø–∏–Ω–≥ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–ª–µ–π (—Ç–æ–ª—å–∫–æ —Ç–µ, —á—Ç–æ –µ—Å—Ç—å –≤ ClientBloggerInfo)
  if (changes.full_name !== undefined) {
    mappedFields.name = changes.full_name;
  }

  // –ú–∞–ø–ø–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è)
  if ((changes as any).verification_status !== undefined) {
    mappedFields.verificationStatus = (changes as any).verification_status;
  }

  return mappedFields;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö
 * @param oldData - —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
 * @param newData - –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
 * @returns true –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è, false –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–¥–µ–Ω—Ç–∏—á–Ω—ã
 */
export function hasProfileChanges(
  oldData: Partial<EditData>,
  newData: Partial<EditData>
): boolean {
  const keys = new Set([...Object.keys(oldData), ...Object.keys(newData)]);
  
  for (const key of keys) {
    const typedKey = key as keyof EditData;
    if (oldData[typedKey] !== newData[typedKey]) {
      return true;
    }
  }
  
  return false;
}

/**
 * –õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
 * @param changes - –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
 * @param component - –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
 */
export function logProfileChanges(
  changes: Partial<EditData>,
  component: string
): void {
  const changedFields = Object.keys(changes).filter(
    key => changes[key as keyof EditData] !== undefined
  );
  
  if (changedFields.length > 0) {
    console.log(`üîÑ ${component}: Profile changes detected`, {
      changedFields,
      changes: changedFields.reduce((acc, key) => {
        acc[key] = changes[key as keyof EditData];
        return acc;
      }, {} as Record<string, any>),
    });
  }
}
