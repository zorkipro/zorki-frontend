/**
 * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * –¢–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ production
 */

const isDev = import.meta.env.DEV;

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
 * –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
 */
export function logError(message: string, error?: unknown): void {
  if (isDev) {
    console.error(`‚ùå [ERROR] ${message}`, error || '');
  }
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
 * –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ development
 */
export function logDev(message: string, data?: unknown): void {
  if (isDev) {
    console.log(`üîç [DEV] ${message}`, data || '');
  }
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
 * –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ development
 */
export function logWarn(message: string, data?: unknown): void {
  if (isDev) {
    console.warn(`‚ö†Ô∏è [WARN] ${message}`, data || '');
  }
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
 * –õ–æ–≥–∏—Ä—É–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞, –¥–∞–∂–µ –≤ production
 */
export function logCritical(message: string, error?: unknown): void {
  console.error(`üî• [CRITICAL] ${message}`, error || '');
}

/**
 * –ü—Ä–æ—Å—Ç–æ–π logger –æ–±—ä–µ–∫—Ç –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
 */
export const logger = {
  dev: logDev,
  error: logError,
  warn: logWarn,
  critical: logCritical,
};