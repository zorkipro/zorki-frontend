/**
 * –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * –¢–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ production
 */

const isDev = import.meta.env.DEV;

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
 * –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ development —Ä–µ–∂–∏–º–µ
 * @param message - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
 * @param error - –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @param context - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —Ç–æ–ª—å–∫–æ –¥–ª—è development)
 */
export function logError(message: string, error?: unknown, context?: Record<string, unknown>): void {
  if (isDev) {
    if (context) {
      console.error(`‚ùå [ERROR] ${message}`, error || '', context);
    } else {
      console.error(`‚ùå [ERROR] ${message}`, error || '');
    }
  }
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
 * –õ–æ–≥–∏—Ä—É–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞, –¥–∞–∂–µ –≤ production
 * @param message - —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
 * @param error - –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 * @param context - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 */
export function logCritical(message: string, error?: unknown, context?: Record<string, unknown>): void {
  if (context) {
    console.error(`üî• [CRITICAL] ${message}`, error || '', context);
  } else {
    console.error(`üî• [CRITICAL] ${message}`, error || '');
  }
}

/**
 * –ü—Ä–æ—Å—Ç–æ–π logger –æ–±—ä–µ–∫—Ç –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
 */
export const logger = {
  error: logError,
  critical: logCritical,
};