/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –±–ª–æ–≥–µ—Ä–∞
 *
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ ProfileChecker –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
 * –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 */

import type { User } from '@supabase/supabase-js';
import type { ClientBloggerInfo } from '@/api/types';
import { AUTH_PAGES } from '@/config/routes';
import { isApprovedStatus, isRejectedStatus } from '@/config/statuses';
import { logger } from '@/utils/logger';

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –±–ª–æ–≥–µ—Ä–∞
 */
export interface BloggerValidationResult {
  /** –í–∞–ª–∏–¥–µ–Ω –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å */
  isValid: boolean;
  /** –ü—Ä–∏—á–∏–Ω–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ (–µ—Å–ª–∏ isValid = false) */
  reason?: 'no_blogger' | 'no_username' | 'rejected';
  /** –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */
  message?: string;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–æ—Ñ–∏–ª—è
 *
 * @param pathname - –¢–µ–∫—É—â–∏–π –ø—É—Ç—å
 * @param user - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Supabase
 * @param loading - –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏
 * @param bloggerInfoLoading - –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–ª–æ–≥–µ—Ä–µ
 * @returns true –µ—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω—É–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
 *
 * @example
 * if (shouldSkipProfileCheck(pathname, user, loading, bloggerInfoLoading)) {
 *   return; // –ù–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å
 * }
 */
export function shouldSkipProfileCheck(
  pathname: string,
  user: User | null,
  loading: boolean,
  bloggerInfoLoading: boolean
): boolean {
  console.log('üîç shouldSkipProfileCheck:', {
    pathname,
    hasUser: !!user,
    loading,
    bloggerInfoLoading,
    isAuthPage: AUTH_PAGES.some((page) => pathname === page),
  });

  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (!user) {
    console.log('‚è≠Ô∏è Skipping: no user');
    return true;
  }

  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
  if (loading || bloggerInfoLoading) {
    console.log('‚è≠Ô∏è Skipping: still loading');
    return true;
  }

  // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
  if (AUTH_PAGES.some((page) => pathname === page)) {
    console.log('‚è≠Ô∏è Skipping: auth page');
    return true;
  }

  console.log('‚úÖ Not skipping: will perform check');
  return false;
}

/**
 * –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–ª–æ–≥–µ—Ä–µ
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
 *
 * @param bloggerInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–ª–æ–≥–µ—Ä–µ –∏–∑ API
 * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 *
 * @example
 * const validation = validateBloggerInfo(bloggerInfo);
 * if (!validation.isValid) {
 * }
 */
export function validateBloggerInfo(
  bloggerInfo: ClientBloggerInfo | null
): BloggerValidationResult {
  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
  console.log('üîç validateBloggerInfo called with:', {
    bloggerInfo,
    hasBloggerInfo: !!bloggerInfo,
    username: bloggerInfo?.username,
    usernameLength: bloggerInfo?.username?.length,
    verificationStatus: bloggerInfo?.verificationStatus,
  });

  // –ù–µ—Ç —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ –±–ª–æ–≥–µ—Ä–∞
  if (!bloggerInfo) {
    console.log('‚ùå No blogger info found');
    return {
      isValid: false,
      reason: 'no_blogger',
      message: '–ë–ª–æ–≥–µ—Ä –Ω–µ —Å–≤—è–∑–∞–Ω —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º',
    };
  }

  // –ù–µ—Ç username (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ)
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ –Ω–∞ falsy, –Ω–æ –∏ –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –ø–æ—Å–ª–µ trim
  const hasValidUsername = bloggerInfo.username && bloggerInfo.username.trim().length > 0;
  console.log('üîç Username validation:', {
    username: bloggerInfo.username,
    hasValidUsername,
    trimmedLength: bloggerInfo.username?.trim().length,
  });
  
  if (!hasValidUsername) {
    console.log('‚ùå Invalid username');
    return {
      isValid: false,
      reason: 'no_username',
      message: '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç username –±–ª–æ–≥–µ—Ä–∞',
    };
  }

  // –ü—Ä–æ—Ñ–∏–ª—å –æ—Ç–∫–ª–æ–Ω–µ–Ω
  if (isRejectedStatus(bloggerInfo.verificationStatus)) {
    console.log('‚ùå Profile rejected');
    return {
      isValid: false,
      reason: 'rejected',
      message: '–ü—Ä–æ—Ñ–∏–ª—å –±–ª–æ–≥–µ—Ä–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω',
    };
  }

  // –ï—Å–ª–∏ –µ—Å—Ç—å username –∏ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω - –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞
  console.log('‚úÖ Profile validation passed');
  return {
    isValid: true,
  };
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—É—Ç—å –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–ª–æ–≥–µ—Ä–∞
 *
 * @param bloggerInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–ª–æ–≥–µ—Ä–µ
 * @param validationResult - –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 * @returns –ü—É—Ç—å –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –∏–ª–∏ null –µ—Å–ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–µ –Ω—É–∂–µ–Ω
 *
 * @example
 * const redirectPath = determineRedirectPath(bloggerInfo, validation);
 * if (redirectPath) {
 *   navigate(redirectPath);
 * }
 */
export function determineRedirectPath(
  bloggerInfo: ClientBloggerInfo | null,
  validationResult: BloggerValidationResult
): string | null {
  // –ï—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ - —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–µ –Ω—É–∂–µ–Ω
  if (validationResult.isValid) {
    return null;
  }

  // –ù–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏—á–∏–Ω—ã –Ω–µ–≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å
  switch (validationResult.reason) {
    case 'no_blogger':
    case 'no_username':
    case 'rejected':
      return '/profile-setup';

    default:
      return null;
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
 *
 * @param pathname - –¢–µ–∫—É—â–∏–π –ø—É—Ç—å
 * @param user - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Supabase
 * @param loading - –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏
 * @param bloggerInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–ª–æ–≥–µ—Ä–µ
 * @param bloggerInfoLoading - –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–ª–æ–≥–µ—Ä–µ
 * @returns –ü—É—Ç—å –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –∏–ª–∏ null
 *
 * @example
 * const redirectPath = checkProfileRedirect(pathname, user, loading, bloggerInfo, bloggerInfoLoading);
 * if (redirectPath) {
 *   navigate(redirectPath);
 * }
 */
export function checkProfileRedirect(
  pathname: string,
  user: User | null,
  loading: boolean,
  bloggerInfo: ClientBloggerInfo | null,
  bloggerInfoLoading: boolean
): string | null {
  console.log('üîç checkProfileRedirect called:', {
    pathname,
    hasUser: !!user,
    loading,
    bloggerInfoLoading,
    hasBloggerInfo: !!bloggerInfo,
  });

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É
  if (shouldSkipProfileCheck(pathname, user, loading, bloggerInfoLoading)) {
    console.log('‚è≠Ô∏è Skipping profile check');
    return null;
  }

  // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–ª–æ–≥–µ—Ä–µ
  const validation = validateBloggerInfo(bloggerInfo);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
  const redirectPath = determineRedirectPath(bloggerInfo, validation);
  
  console.log('üîç checkProfileRedirect result:', {
    validation,
    redirectPath,
  });

  return redirectPath;
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –±–ª–æ–≥–µ—Ä –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 *
 * @param bloggerInfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–ª–æ–≥–µ—Ä–µ
 * @returns true –µ—Å–ª–∏ –±–ª–æ–≥–µ—Ä –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
 */
export function isOnModeration(bloggerInfo: ClientBloggerInfo | null): boolean {
  if (!bloggerInfo) return false;
  return bloggerInfo.verificationStatus === 'MODERATION';
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ—Ñ–∏–ª—è
 *
 * @param validationResult - –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 * @returns –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
 */
export function getProfileStatusMessage(validationResult: BloggerValidationResult): string {
  if (validationResult.isValid) {
    return '–ü—Ä–æ—Ñ–∏–ª—å –∞–∫—Ç–∏–≤–µ–Ω';
  }

  switch (validationResult.reason) {
    case 'no_blogger':
      return '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –±–ª–æ–≥–µ—Ä–∞';

    case 'no_username':
      return '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å username –±–ª–æ–≥–µ—Ä–∞';

    case 'rejected':
      return '–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π';

    default:
      return '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è';
  }
}
